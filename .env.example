WEBUI_SECRET_KEY='sdfklj18273912kj986#$sdf23423g34531111!!!!'

# Ollama URL for the backend to connect
# The path '/ollama' will be redirected to the specified backend URL
OLLAMA_BASE_URL='http://ollama:11434'
OLLAMA_HOST=ollama:11434
# Multiple Ollama instances can be specified by separating with semicolons
# Useful for load balancing or accessing different model sets
# OLLAMA_BASE_URLS='http://localhost:11434;http://another-ollama:11434'
# Enable/disable Ollama API integration
ENABLE_OLLAMA_API=true
# Use Ollama service (matches Dockerfile build arg)
USE_OLLAMA=true

# Docker build configuration
USE_CUDA=false
USE_CUDA_VER=cu121
USE_EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2
USE_RERANKING_MODEL=""
USE_TIKTOKEN_ENCODING_NAME=cl100k_base
BUILD_HASH=dev-build
UID=0
GID=0

# ===== OPENAI API CONFIGURATION =====
# Base URL for OpenAI API (or compatible) endpoints
OPENAI_API_BASE_URL=''
# API key for authenticating with OpenAI services
OPENAI_API_KEY=''
# Multiple OpenAI API keys can be specified by separating with semicolons
# Useful for load balancing or handling rate limits
# OPENAI_API_KEYS=''
# Multiple OpenAI API base URLs can be specified by separating with semicolons
# Useful for connecting to different OpenAI-compatible endpoints
# OPENAI_API_BASE_URLS=''
# Enable/disable OpenAI API integration
# ENABLE_OPENAI_API=true

# ===== GEMINI API CONFIGURATION =====
# API key for Google's Gemini AI services
# GEMINI_API_KEY=''
# Base URL for Gemini API endpoints
# GEMINI_API_BASE_URL=''

# ===== AUTHENTICATION CONFIGURATION =====
# Enable/disable authentication for the WebUI
# WEBUI_AUTH=true
# Secret key used for JWT token generation and validation
# JWT_SECRET_KEY=''
# JWT token expiry time in seconds (-1 for no expiry)
# JWT_EXPIRES_IN=-1
# Enable/disable API key authentication
# ENABLE_API_KEY=true
# Enable/disable endpoint restrictions for API keys
# ENABLE_API_KEY_ENDPOINT_RESTRICTIONS=false
# Comma-separated list of endpoints allowed for API key access
# API_KEY_ALLOWED_ENDPOINTS=''

# ===== OAUTH CONFIGURATION =====
# Enable/disable user signup via OAuth providers
# ENABLE_OAUTH_SIGNUP=false
# Merge accounts with the same email address during OAuth login
# OAUTH_MERGE_ACCOUNTS_BY_EMAIL=false

# Google OAuth settings
# GOOGLE_CLIENT_ID=''
# GOOGLE_CLIENT_SECRET=''
# OAuth scopes to request from Google
# GOOGLE_OAUTH_SCOPE='openid email profile'
# Redirect URI for Google OAuth callback
# GOOGLE_REDIRECT_URI=''

# Microsoft OAuth settings
# MICROSOFT_CLIENT_ID=''
# MICROSOFT_CLIENT_SECRET=''
# Microsoft tenant ID for organizational accounts
# MICROSOFT_CLIENT_TENANT_ID=''
# OAuth scopes to request from Microsoft
# MICROSOFT_OAUTH_SCOPE='openid email profile'
# Redirect URI for Microsoft OAuth callback
# MICROSOFT_REDIRECT_URI=''

# GitHub OAuth settings
# GITHUB_CLIENT_ID=''
# GITHUB_CLIENT_SECRET=''
# OAuth scopes to request from GitHub
# GITHUB_CLIENT_SCOPE='user:email'
# Redirect URI for GitHub OAuth callback
# GITHUB_CLIENT_REDIRECT_URI=''

# Generic OpenID Connect settings
# OAUTH_CLIENT_ID=''
# OAUTH_CLIENT_SECRET=''
# URL to the OpenID Connect provider's discovery document
# OPENID_PROVIDER_URL=''
# Redirect URI for OIDC callback
# OPENID_REDIRECT_URI=''
# OAuth scopes to request from OIDC provider
# OAUTH_SCOPES='openid email profile'
# Display name for the OIDC provider button
# OAUTH_PROVIDER_NAME='SSO'
# Claim field to use for username from OIDC provider
# OAUTH_USERNAME_CLAIM='name'
# Claim field to use for profile picture from OIDC provider
# OAUTH_PICTURE_CLAIM='picture'
# Claim field to use for email from OIDC provider
# OAUTH_EMAIL_CLAIM='email'
# Claim field to use for group membership from OIDC provider
# OAUTH_GROUPS_CLAIM='groups'
# Enable/disable role mapping from OAuth claims
# ENABLE_OAUTH_ROLE_MANAGEMENT=false
# Enable/disable group mapping from OAuth claims
# ENABLE_OAUTH_GROUP_MANAGEMENT=false
# Claim field to use for roles from OIDC provider
# OAUTH_ROLES_CLAIM='roles'
# Comma-separated list of allowed roles from OAuth
# OAUTH_ALLOWED_ROLES='user,admin'
# Comma-separated list of roles that grant admin privileges
# OAUTH_ADMIN_ROLES='admin'
# Comma-separated list of allowed email domains (* for any)
# OAUTH_ALLOWED_DOMAINS='*'

# ===== WEBUI CONFIGURATION =====
# Public URL of the WebUI for callbacks and redirects
# WEBUI_URL='http://localhost:3000'
# Custom name for the WebUI interface
# WEBUI_NAME=''
# Custom favicon URL for the WebUI
# WEBUI_FAVICON_URL=''
# Enable/disable user self-registration
# ENABLE_SIGNUP=true
# Enable/disable the login form (useful when using only OAuth)
# ENABLE_LOGIN_FORM=true
# Default locale/language for the UI
# DEFAULT_LOCALE=''
# Default models to show in the UI
# DEFAULT_MODELS=''
# Default role assigned to new users
# DEFAULT_USER_ROLE='pending'
# Show admin contact details in the UI
# SHOW_ADMIN_DETAILS=true
# Admin email address for support
# ADMIN_EMAIL=''
# Enable/disable admin export functionality
# ENABLE_ADMIN_EXPORT=true
# Enable/disable admin access to all user chats
# ENABLE_ADMIN_CHAT_ACCESS=true
# Enable/disable community sharing features
# ENABLE_COMMUNITY_SHARING=true
# Enable/disable message rating functionality
# ENABLE_MESSAGE_RATING=true
# Comma-separated list of allowed CORS origins (* for any)
# CORS_ALLOW_ORIGIN='*'
# JSON array of banner notifications to display in the UI
# WEBUI_BANNERS=''

# ===== USER PERMISSIONS =====
# Allow users to access model management in workspace
# USER_PERMISSIONS_WORKSPACE_MODELS_ACCESS=false
# Allow users to access knowledge base management
# USER_PERMISSIONS_WORKSPACE_KNOWLEDGE_ACCESS=false
# Allow users to access prompt templates
# USER_PERMISSIONS_WORKSPACE_PROMPTS_ACCESS=false
# Allow users to access tools configuration
# USER_PERMISSIONS_WORKSPACE_TOOLS_ACCESS=false
# Allow users to use chat controls (temperature, etc.)
# USER_PERMISSIONS_CHAT_CONTROLS=true
# Allow users to upload files in chat
# USER_PERMISSIONS_CHAT_FILE_UPLOAD=true
# Allow users to delete their chats
# USER_PERMISSIONS_CHAT_DELETE=true
# Allow users to edit their messages
# USER_PERMISSIONS_CHAT_EDIT=true
# Allow users to create temporary chats
# USER_PERMISSIONS_CHAT_TEMPORARY=true
# Allow users to use web search feature
# USER_PERMISSIONS_FEATURES_WEB_SEARCH=true
# Allow users to use image generation
# USER_PERMISSIONS_FEATURES_IMAGE_GENERATION=true
# Allow users to use code interpreter
# USER_PERMISSIONS_FEATURES_CODE_INTERPRETER=true

# ===== CHANNELS AND EVALUATION =====
# Enable/disable channels feature for team collaboration
# ENABLE_CHANNELS=false
# Enable/disable model evaluation arena
# ENABLE_EVALUATION_ARENA_MODELS=true
# Webhook URL for notifications
# WEBHOOK_URL=''

# ===== DIRECT CONNECTIONS =====
# Enable/disable direct connections to model providers
# ENABLE_DIRECT_CONNECTIONS=true

# ===== TASK CONFIGURATION =====
# Default model to use for background tasks
# TASK_MODEL=''
# External model to use for background tasks
# TASK_MODEL_EXTERNAL=''
# Custom prompt template for chat title generation
# TITLE_GENERATION_PROMPT_TEMPLATE=''
# Custom prompt template for chat tags generation
# TAGS_GENERATION_PROMPT_TEMPLATE=''
# Custom prompt template for image prompt generation
# IMAGE_PROMPT_GENERATION_PROMPT_TEMPLATE=''
# Enable/disable automatic tag generation for chats
# ENABLE_TAGS_GENERATION=true
# Enable/disable automatic title generation for chats
# ENABLE_TITLE_GENERATION=true
# Enable/disable automatic search query generation
# ENABLE_SEARCH_QUERY_GENERATION=true
# Enable/disable automatic retrieval query generation
# ENABLE_RETRIEVAL_QUERY_GENERATION=true
# Custom prompt template for query generation
# QUERY_GENERATION_PROMPT_TEMPLATE=''
# Enable/disable autocomplete suggestions
# ENABLE_AUTOCOMPLETE_GENERATION=true
# Maximum input length for autocomplete generation (-1 for no limit)
# AUTOCOMPLETE_GENERATION_INPUT_MAX_LENGTH=-1
# Custom prompt template for autocomplete generation
# AUTOCOMPLETE_GENERATION_PROMPT_TEMPLATE=''
# Custom prompt template for function calling with tools
# TOOLS_FUNCTION_CALLING_PROMPT_TEMPLATE=''

# ===== CODE INTERPRETER/EXECUTION =====
# Enable/disable code execution functionality
# ENABLE_CODE_EXECUTION=true
# Engine to use for code execution (pyodide, jupyter)
# CODE_EXECUTION_ENGINE='pyodide'
# URL for Jupyter server if using jupyter engine
# CODE_EXECUTION_JUPYTER_URL=''
# Authentication method for Jupyter server
# CODE_EXECUTION_JUPYTER_AUTH=''
# Authentication token for Jupyter server
# CODE_EXECUTION_JUPYTER_AUTH_TOKEN=''
# Authentication password for Jupyter server
# CODE_EXECUTION_JUPYTER_AUTH_PASSWORD=''
# Timeout in seconds for Jupyter code execution
# CODE_EXECUTION_JUPYTER_TIMEOUT=60
# Enable/disable code interpreter functionality
# ENABLE_CODE_INTERPRETER=true
# Engine to use for code interpreter (pyodide, jupyter)
# CODE_INTERPRETER_ENGINE='pyodide'
# Custom prompt template for code interpreter
# CODE_INTERPRETER_PROMPT_TEMPLATE=''
# URL for Jupyter server if using jupyter engine for code interpreter
# CODE_INTERPRETER_JUPYTER_URL=''
# Authentication method for Jupyter server for code interpreter
# CODE_INTERPRETER_JUPYTER_AUTH=''
# Authentication token for Jupyter server for code interpreter
# CODE_INTERPRETER_JUPYTER_AUTH_TOKEN=''
# Authentication password for Jupyter server for code interpreter
# CODE_INTERPRETER_JUPYTER_AUTH_PASSWORD=''
# Timeout in seconds for Jupyter code interpreter
# CODE_INTERPRETER_JUPYTER_TIMEOUT=60

# ===== VECTOR DATABASE CONFIGURATION =====
# Vector database provider (chroma, milvus, qdrant, opensearch, elasticsearch, pgvector)
# VECTOR_DB='chroma'

# Chroma settings
# Tenant for Chroma multi-tenancy
# CHROMA_TENANT=''
# Database name for Chroma
# CHROMA_DATABASE=''
# Host for Chroma server
# CHROMA_HTTP_HOST=''
# Port for Chroma server
# CHROMA_HTTP_PORT=8000
# Authentication provider for Chroma
# CHROMA_CLIENT_AUTH_PROVIDER=''
# Authentication credentials for Chroma
# CHROMA_CLIENT_AUTH_CREDENTIALS=''
# Custom HTTP headers for Chroma requests
# CHROMA_HTTP_HEADERS=''
# Enable/disable SSL for Chroma connections
# CHROMA_HTTP_SSL=false

# Milvus settings
# URI for Milvus server
# MILVUS_URI=''
# Database name for Milvus
# MILVUS_DB='default'
# Authentication token for Milvus
# MILVUS_TOKEN=''

# Qdrant settings
# URI for Qdrant server
# QDRANT_URI=''
# API key for Qdrant
# QDRANT_API_KEY=''

# OpenSearch settings
# URI for OpenSearch server
# OPENSEARCH_URI='https://localhost:9200'
# Enable/disable SSL for OpenSearch
# OPENSEARCH_SSL=true
# Enable/disable certificate verification for OpenSearch
# OPENSEARCH_CERT_VERIFY=false
# Username for OpenSearch authentication
# OPENSEARCH_USERNAME=''
# Password for OpenSearch authentication
# OPENSEARCH_PASSWORD=''

# Elasticsearch settings
# URL for Elasticsearch server
# ELASTICSEARCH_URL='https://localhost:9200'
# Path to CA certificates for Elasticsearch
# ELASTICSEARCH_CA_CERTS=''
# API key for Elasticsearch
# ELASTICSEARCH_API_KEY=''
# Username for Elasticsearch authentication
# ELASTICSEARCH_USERNAME=''
# Password for Elasticsearch authentication
# ELASTICSEARCH_PASSWORD=''
# Cloud ID for Elasticsearch service
# ELASTICSEARCH_CLOUD_ID=''
# SSL certificate fingerprint for verification
# SSL_ASSERT_FINGERPRINT=''
# Prefix for Elasticsearch indices
# ELASTICSEARCH_INDEX_PREFIX='open_webui_collections'

# Pgvector settings
# Database URL for pgvector (PostgreSQL with vector extension)
# PGVECTOR_DB_URL=''
# Maximum vector length for pgvector initialization
# PGVECTOR_INITIALIZE_MAX_VECTOR_LENGTH=1536

# ===== STORAGE PROVIDER =====
# Storage provider for file uploads (local, s3, gcs, azure)
# STORAGE_PROVIDER='local'

# S3 settings
# Access key ID for S3
# S3_ACCESS_KEY_ID=''
# Secret access key for S3
# S3_SECRET_ACCESS_KEY=''
# Region name for S3
# S3_REGION_NAME=''
# Bucket name for S3 storage
# S3_BUCKET_NAME=''
# Key prefix for S3 objects
# S3_KEY_PREFIX=''
# Custom endpoint URL for S3-compatible services
# S3_ENDPOINT_URL=''
# Enable/disable S3 accelerate endpoint
# S3_USE_ACCELERATE_ENDPOINT=false
# Addressing style for S3 (virtual, path)
# S3_ADDRESSING_STYLE=''

# Google Cloud Storage settings
# Bucket name for GCS
# GCS_BUCKET_NAME=''
# JSON credentials for Google Cloud service account
# GOOGLE_APPLICATION_CREDENTIALS_JSON=''

# Azure Blob Storage settings
# Endpoint for Azure Storage
# AZURE_STORAGE_ENDPOINT=''
# Container name for Azure Storage
# AZURE_STORAGE_CONTAINER_NAME=''
# Access key for Azure Storage
# AZURE_STORAGE_KEY=''

# ===== GOOGLE DRIVE INTEGRATION =====
# Enable/disable Google Drive integration for file uploads
# ENABLE_GOOGLE_DRIVE_INTEGRATION=false
# Client ID for Google Drive API
# GOOGLE_DRIVE_CLIENT_ID=''
# API key for Google Drive API
# GOOGLE_DRIVE_API_KEY=''

# ===== ONEDRIVE INTEGRATION =====
# Enable/disable OneDrive integration for file uploads
# ENABLE_ONEDRIVE_INTEGRATION=false
# Client ID for OneDrive API
# ONEDRIVE_CLIENT_ID=''

# ===== RAG (RETRIEVAL-AUGMENTED GENERATION) CONFIGURATION =====
# Engine for content extraction from documents (tika, document_intelligence)
# CONTENT_EXTRACTION_ENGINE=''
# URL for Apache Tika server
# TIKA_SERVER_URL='http://tika:9998'
# Endpoint for Azure Document Intelligence
# DOCUMENT_INTELLIGENCE_ENDPOINT=''
# API key for Azure Document Intelligence
# DOCUMENT_INTELLIGENCE_KEY=''
# Skip embedding and retrieval steps in RAG pipeline
# BYPASS_EMBEDDING_AND_RETRIEVAL=false
# Number of top results to retrieve in RAG
# RAG_TOP_K=3
# Minimum relevance threshold for RAG results (0.0-1.0)
# RAG_RELEVANCE_THRESHOLD=0.0
# Enable/disable hybrid search (vector + keyword)
# ENABLE_RAG_HYBRID_SEARCH=false
# Include full document context in RAG responses
# RAG_FULL_CONTEXT=false
# Maximum number of files allowed in RAG
# RAG_FILE_MAX_COUNT=''
# Maximum file size allowed in RAG (bytes)
# RAG_FILE_MAX_SIZE=''
# Enable/disable SSL verification for web loaders
# ENABLE_RAG_WEB_LOADER_SSL_VERIFICATION=true
# Engine for generating embeddings (openai, ollama, local)
# RAG_EMBEDDING_ENGINE=''
# Extract and process images from PDF files
# PDF_EXTRACT_IMAGES=false
# Model to use for generating embeddings
# RAG_EMBEDDING_MODEL='sentence-transformers/all-MiniLM-L6-v2'
# Automatically update embedding models
# RAG_EMBEDDING_MODEL_AUTO_UPDATE=true
# Trust remote code when loading embedding models
# RAG_EMBEDDING_MODEL_TRUST_REMOTE_CODE=true
# Batch size for embedding generation
# RAG_EMBEDDING_BATCH_SIZE=1
# Model to use for reranking search results
# RAG_RERANKING_MODEL=''
# Automatically update reranking models
# RAG_RERANKING_MODEL_AUTO_UPDATE=true
# Trust remote code when loading reranking models
# RAG_RERANKING_MODEL_TRUST_REMOTE_CODE=true
# Text splitter algorithm (recursive, sentence, token, markdown)
# RAG_TEXT_SPLITTER=''
# Encoding name for tiktoken tokenizer
# TIKTOKEN_ENCODING_NAME='cl100k_base'
# Size of text chunks for RAG
# CHUNK_SIZE=1000
# Overlap between text chunks for RAG
# CHUNK_OVERLAP=100
# Custom prompt template for RAG
# RAG_TEMPLATE=''
# OpenAI API base URL for RAG
# RAG_OPENAI_API_BASE_URL=''
# OpenAI API key for RAG
# RAG_OPENAI_API_KEY=''
# Ollama base URL for RAG
# RAG_OLLAMA_BASE_URL=''
# Ollama API key for RAG
# RAG_OLLAMA_API_KEY=''
# Enable/disable local web fetching for RAG
# ENABLE_RAG_LOCAL_WEB_FETCH=false
# Language for YouTube transcript loader
# YOUTUBE_LOADER_LANGUAGE='en'
# Proxy URL for YouTube loader
# YOUTUBE_LOADER_PROXY_URL=''

# ===== WEB SEARCH CONFIGURATION =====
# Enable/disable web search for RAG
# ENABLE_RAG_WEB_SEARCH=false
# Search engine to use (searxng, google, brave, kagi, etc.)
# RAG_WEB_SEARCH_ENGINE=''
# Skip embedding and retrieval for web search results
# BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL=false
# URL for SearXNG instance
# SEARXNG_QUERY_URL=''
# API key for Google Programmable Search Engine
# GOOGLE_PSE_API_KEY=''
# Engine ID for Google Programmable Search Engine
# GOOGLE_PSE_ENGINE_ID=''
# API key for Brave Search
# BRAVE_SEARCH_API_KEY=''
# API key for Kagi Search
# KAGI_SEARCH_API_KEY=''
# API key for Mojeek Search
# MOJEEK_SEARCH_API_KEY=''
# API key for Bocha Search
# BOCHA_SEARCH_API_KEY=''
# API key for SerpStack
# SERPSTACK_API_KEY=''
# Enable/disable HTTPS for SerpStack
# SERPSTACK_HTTPS=true
# API key for Serper
# SERPER_API_KEY=''
# API key for Serply
# SERPLY_API_KEY=''
# API key for Tavily
# TAVILY_API_KEY=''
# API key for Jina
# JINA_API_KEY=''
# API key for SearchAPI
# SEARCHAPI_API_KEY=''
# Engine for SearchAPI
# SEARCHAPI_ENGINE=''
# API key for SerpAPI
# SERPAPI_API_KEY=''
# Engine for SerpAPI
# SERPAPI_ENGINE=''
# Endpoint for Bing Search v7
# BING_SEARCH_V7_ENDPOINT='https://api.bing.microsoft.com/v7.0/search'
# Subscription key for Bing Search v7
# BING_SEARCH_V7_SUBSCRIPTION_KEY=''
# API key for Exa
# EXA_API_KEY=''
# API key for Perplexity
# PERPLEXITY_API_KEY=''
# Number of search results to retrieve
# RAG_WEB_SEARCH_RESULT_COUNT=3
# Maximum concurrent requests for web search
# RAG_WEB_SEARCH_CONCURRENT_REQUESTS=10
# Engine for web page loading (safe_web, playwright, firecrawl)
# RAG_WEB_LOADER_ENGINE='safe_web'
# Trust environment variables for web search
# RAG_WEB_SEARCH_TRUST_ENV=false
# WebSocket URI for Playwright
# PLAYWRIGHT_WS_URI=''
# API key for Firecrawl
# FIRECRAWL_API_KEY=''
# Base URL for Firecrawl API
# FIRECRAWL_API_BASE_URL='https://api.firecrawl.dev'

# ===== IMAGE GENERATION =====
# Engine for image generation (openai, automatic1111, comfyui, gemini)
# IMAGE_GENERATION_ENGINE='openai'
# Enable/disable image generation feature
# ENABLE_IMAGE_GENERATION=false
# Enable/disable automatic prompt generation for images
# ENABLE_IMAGE_PROMPT_GENERATION=true
# Base URL for Automatic1111 (Stable Diffusion) API
# AUTOMATIC1111_BASE_URL=''
# Authentication for Automatic1111 API
# AUTOMATIC1111_API_AUTH=''
# CFG scale for Automatic1111 (guidance scale)
# AUTOMATIC1111_CFG_SCALE=''
# Sampler for Automatic1111
# AUTOMATIC1111_SAMPLER=''
# Scheduler for Automatic1111
# AUTOMATIC1111_SCHEDULER=''
# Base URL for ComfyUI API
# COMFYUI_BASE_URL=''
# API key for ComfyUI
# COMFYUI_API_KEY=''
# JSON workflow for ComfyUI
# COMFYUI_WORKFLOW=''
# OpenAI API base URL for image generation
# IMAGES_OPENAI_API_BASE_URL=''
# OpenAI API key for image generation
# IMAGES_OPENAI_API_KEY=''
# Gemini API base URL for image generation
# IMAGES_GEMINI_API_BASE_URL=''
# Gemini API key for image generation
# IMAGES_GEMINI_API_KEY=''
# Default image size (width x height)
# IMAGE_SIZE='512x512'
# Number of steps for image generation
# IMAGE_STEPS=50
# Model to use for image generation
# IMAGE_GENERATION_MODEL=''

# ===== AUDIO CONFIGURATION =====
# Whisper model for speech-to-text (tiny, base, small, medium, large)
# WHISPER_MODEL='base'
# Directory for Whisper model files
# WHISPER_MODEL_DIR=''
# Automatically update Whisper models
# WHISPER_MODEL_AUTO_UPDATE=false
# API key for Deepgram speech-to-text
# DEEPGRAM_API_KEY=''
# OpenAI API base URL for speech-to-text
# AUDIO_STT_OPENAI_API_BASE_URL=''
# OpenAI API key for speech-to-text
# AUDIO_STT_OPENAI_API_KEY=''
# Engine for speech-to-text (whisper, openai, deepgram)
# AUDIO_STT_ENGINE=''
# Model for speech-to-text
# AUDIO_STT_MODEL=''
# OpenAI API base URL for text-to-speech
# AUDIO_TTS_OPENAI_API_BASE_URL=''
# OpenAI API key for text-to-speech
# AUDIO_TTS_OPENAI_API_KEY=''
# API key for text-to-speech
# AUDIO_TTS_API_KEY=''
# Engine for text-to-speech (openai, azure)
# AUDIO_TTS_ENGINE=''
# Model for text-to-speech
# AUDIO_TTS_MODEL='tts-1'
# Voice for text-to-speech
# AUDIO_TTS_VOICE='alloy'
# Text splitting strategy for TTS (punctuation, tokens)
# AUDIO_TTS_SPLIT_ON='punctuation'
# Azure region for speech services
# AUDIO_TTS_AZURE_SPEECH_REGION='eastus'
# Output format for Azure speech services
# AUDIO_TTS_AZURE_SPEECH_OUTPUT_FORMAT='audio-24khz-160kbitrate-mono-mp3'

# ===== LDAP CONFIGURATION =====
# Enable/disable LDAP authentication
# ENABLE_LDAP=false
# Display label for LDAP server in UI
# LDAP_SERVER_LABEL='LDAP Server'
# Hostname of LDAP server
# LDAP_SERVER_HOST='localhost'
# Port for LDAP server
# LDAP_SERVER_PORT=389
# LDAP attribute for email address
# LDAP_ATTRIBUTE_FOR_MAIL='mail'
# LDAP attribute for username
# LDAP_ATTRIBUTE_FOR_USERNAME='uid'
# Distinguished name for application binding
# LDAP_APP_DN=''
# Password for application binding
# LDAP_APP_PASSWORD=''
# Base DN for user search
# LDAP_SEARCH_BASE=''
# Filter for user search
# LDAP_SEARCH_FILTER=''
# Enable/disable TLS for LDAP connection
# LDAP_USE_TLS=true
# Path to CA certificate file for LDAP TLS
# LDAP_CA_CERT_FILE=''
# Cipher suite for LDAP TLS
# LDAP_CIPHERS='ALL'

# ===== DO NOT TRACK =====
# Disable Scarf analytics
SCARF_NO_ANALYTICS=true
# Enable Do Not Track
DO_NOT_TRACK=true
# Disable anonymous telemetry
ANONYMIZED_TELEMETRY=false